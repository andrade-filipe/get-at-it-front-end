// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$get-at-it-purple: mat.define-palette(mat.$purple-palette, 700, 500, 800);
$get-at-it-green: mat.define-palette(mat.$green-palette, A200, A100, A400);

$get-at-it-dark-theme: mat.define-dark-theme((
    color: (
        primary: $get-at-it-purple,
        accent: $get-at-it-green,
    ),
));

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$get-at-it-indigo: mat.define-palette(mat.$indigo-palette);
$get-at-it-pink: mat.define-palette(mat.$green-palette, A200, A100, A400);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$get-at-it-light-theme: mat.define-light-theme(
    (
        color: (
            primary: $get-at-it-indigo,
            accent: $get-at-it-pink,
        ),
    )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($get-at-it-light-theme);

@media(prefers-color-scheme: dark) {
    @include mat.all-component-themes($get-at-it-dark-theme);
}

body.dark-theme{
    @include mat.all-component-themes($get-at-it-dark-theme);
}

body.light-theme{
    @include mat.all-component-themes($get-at-it-light-theme);
}
